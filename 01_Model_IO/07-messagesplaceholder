import os
from dotenv import load_dotenv
load_dotenv()
api_key = os.getenv("OPENAI_API_KEY")

from langchain.prompts import (
    ChatPromptTemplate,
    HumanMessagePromptTemplate
)
from langchain.prompts import MessagesPlaceholder

from langchain.schema import (
    HumanMessage,
    AIMessage,
)

from langchain.chat_models import ChatOpenAI

def main():
    # Let's say we have a conversation we want to summarize. This would be the last part we want to pass to the LLM:
    human_prompt = "Summarize our conversation so far in {word_count} words."
    human_message_template = HumanMessagePromptTemplate.from_template(human_prompt)
    # Then, when we create our ChatPromptTemplate, we pass it a list of messages with a MessagePlaceHolder that will allow us to
    # Insert a list of messages during formatting.
    chat_prompt = ChatPromptTemplate.from_messages([MessagesPlaceholder(variable_name="conversation"), human_message_template])

    # Now, let's say that we have this message history. First, the human asked how to learn programming and the AI responded like this:
    human_message = HumanMessage(content="What is the best way to learn programming?")
    ai_message = AIMessage(content="""\
    1. Choose a programming language: Decide on a programming language that you want to learn.

    2. Start with the basics: Familiarize yourself with the basic programming concepts such as variables, data types and control structures.

    3. Practice, practice, practice: The best way to learn programming is through hands-on experience\
    """)

    # Then, when we format the prompt, since our messages place holder name is conversation,
    # We format the prompt with the history along with the word count that we want.
    request = chat_prompt.format_prompt(conversation=[human_message, ai_message], word_count="10").to_messages()
    print(request)
    



if __name__ == "__main__":
    main()
