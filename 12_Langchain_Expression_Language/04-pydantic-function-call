from langchain.prompts import ChatPromptTemplate
from langchain.chat_models import ChatOpenAI
from dotenv import load_dotenv
import os
load_dotenv()

openai_api_key = os.getenv("OPENAI_API_KEY")

def main():
    model = ChatOpenAI(openai_api_key=openai_api_key)
    prompt = ChatPromptTemplate.from_template("tell me a joke about {foo}")
    functions = [
        {
        "name": "joke",
        "description": "A joke",
        "parameters": {
            "type": "object",
            "properties": {
            "setup": {
                "type": "string",
                "description": "The setup for the joke"
            },
            "punchline": {
                "type": "string",
                "description": "The punchline for the joke"
            }
            },
            "required": ["setup", "punchline"]
        }
        }
    ]
    chain = prompt | model.bind(function_call= {"name": "joke"}, functions= functions)
    result = chain.invoke({"foo": "bears"}, config={})
    print(result)


if __name__ == "__main__":
    main()